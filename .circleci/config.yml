version: 2.1

machine:
  services:
    - docker

jobs:
  build:
    docker:
      - image: node:12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    environment:
      - NPM_CONFIG_LOGLEVEL: warn
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Create hash for patches folder contents
          command: cat patches/* | md5sum > patches.hash
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "patches.hash" }}
      - run:
          name: Installing Dependencies
          command: yarn install --ignore-engines --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "patches.hash" }}
      - run:
          name: Compiling Code
          command: yarn build
      - run:
          name: Linting Code
          command: yarn lint-ci
      - save_cache:
          paths:
            - dist
          key: dist-{{ .Branch }}-{{ .Revision }}
  test-local:
    docker:
      - image: node:12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: mongo:3.7.9@sha256:736eec20a17eafaa988d299902fcaab521cb0ca56af4400f782576afc878d6bc
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: redis:3.2.12@sha256:7b0a40301bc1567205e6461c5bf94c38e1e1ad0169709e49132cafc47f6b51f3
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    environment:
      - WINSTON_CONSOLE_LEVEL: none
      - EXPRESS_PORT: 1337
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Create hash for patches folder contents
          command: cat patches/* | md5sum > patches.hash
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "patches.hash" }}
      - restore_cache:
          keys:
            - dist-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Mocha Tests
          command: yarn cover-local
      - run:
          name: Conformance Tests
          command: sh test.sh
      - run: yarn codecov
  test-s3:
    docker:
      - image: node:12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: mongo:3.7.9@sha256:736eec20a17eafaa988d299902fcaab521cb0ca56af4400f782576afc878d6bc
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: redis:3.2.12@sha256:7b0a40301bc1567205e6461c5bf94c38e1e1ad0169709e49132cafc47f6b51f3
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    environment:
      - WINSTON_CONSOLE_LEVEL: none
      - EXPRESS_PORT: 1337
      - STORAGE_REPO: s3
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Create hash for patches folder contents
          command: cat patches/* | md5sum > patches.hash
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "patches.hash" }}
      - restore_cache:
          keys:
            - dist-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Setup S3 Env
          command: |
            echo 'export SUB_FOLDER_ACTIVITIES=circleci/$CIRCLE_BUILD_NUM' >> $BASH_ENV
            echo 'export SUB_FOLDER_AGENTS=circleci/$CIRCLE_BUILD_NUM' >> $BASH_ENV
            echo 'export SUB_FOLDER_STATE=circleci/$CIRCLE_BUILD_NUM' >> $BASH_ENV
            echo 'export SUB_FOLDER_STATEMENTS=circleci/$CIRCLE_BUILD_NUM' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Mocha Tests
          command: yarn cover-s3
      - run:
          name: Conformance Tests
          command: sh test.sh
      - run: yarn codecov
  test-azure:
    docker:
      - image: node:12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: mongo:3.7.9@sha256:736eec20a17eafaa988d299902fcaab521cb0ca56af4400f782576afc878d6bc
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: redis:3.2.12@sha256:7b0a40301bc1567205e6461c5bf94c38e1e1ad0169709e49132cafc47f6b51f3
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    environment:
      - WINSTON_CONSOLE_LEVEL: none
      - EXPRESS_PORT: 1337
      - STORAGE_REPO: azure
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Create hash for patches folder contents
          command: cat patches/* | md5sum > patches.hash
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "patches.hash" }}
      - restore_cache:
          keys:
            - dist-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Setup Azure Env
          command: |
            echo 'export FS_AZURE_CONTAINER_SUBFOLDER=circleci/$CIRCLE_BUILD_NUM' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Mocha Tests
          command: yarn cover-azure
      - run:
          name: Conformance Tests
          command: sh test.sh
      - run: yarn codecov
  test-google:
    docker:
      - image: node:12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: mongo:3.7.9@sha256:736eec20a17eafaa988d299902fcaab521cb0ca56af4400f782576afc878d6bc
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: redis:3.2.12@sha256:7b0a40301bc1567205e6461c5bf94c38e1e1ad0169709e49132cafc47f6b51f3
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    environment:
      - WINSTON_CONSOLE_LEVEL: none
      - EXPRESS_PORT: 1337
      - STORAGE_REPO: google
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Create hash for patches folder contents
          command: cat patches/* | md5sum > patches.hash
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "patches.hash" }}
      - restore_cache:
          keys:
            - dist-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Setup Google Key File
          command: echo ${GCLOUD_SERVICE_KEY} > ./google.keyfile.json
      - run:
          name: Mocha Tests
          command: yarn cover-google
      - run:
          name: Conformance Tests
          command: sh test.sh
      - run: yarn codecov
  release:
    docker:
      - image: node:12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    environment:
      - DOCKER_REPO_SLUG: learninglocker/xapi-service
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 19.03.13
      - run:
          name: Create hash for patches folder contents
          command: cat patches/* | md5sum > patches.hash
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "patches.hash" }}
      - restore_cache:
          keys:
            - dist-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Docker Install
          command: |
            set -x
            DOCKER_VERSION="19.03.12"
            curl -L -o /tmp/docker-$DOCKER_VERSION.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VERSION.tgz
            tar -xz -C /tmp -f /tmp/docker-$DOCKER_VERSION.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Docker Build
          command: docker build -t "$DOCKER_REPO_SLUG" .
      - run:
          name: Docker Tag
          command: docker tag $DOCKER_REPO_SLUG $DOCKER_REPO_SLUG:$CIRCLE_BRANCH
      - deploy:
          name: Semantic Release
          command: yarn semantic-release
      - run:
          name: Docker Login
          command: docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
      - run:
          name: Docker Push
          command: docker push $DOCKER_REPO_SLUG:$CIRCLE_BRANCH

workflows:
  build:
    jobs:
      - build:
          context:
            - docker-hub-creds
      - test-local:
          context:
            - docker-hub-creds
          requires:
            - build
      - test-s3:
          context:
            - docker-hub-creds
          requires:
            - test-local
      - test-azure:
          context:
            - docker-hub-creds
          requires:
            - test-local
      - test-google:
          context:
            - docker-hub-creds
          requires:
            - test-local
      - release:
          context:
            - docker-hub-creds
          requires:
            - test-local
            - test-s3
            - test-azure
            - test-google
          filters:
            branches:
              ignore:
                - /^dependabot\/.*/
                - /^renovate\/.*/
